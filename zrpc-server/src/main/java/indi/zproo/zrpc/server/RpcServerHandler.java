package indi.zproo.zrpc.server;

import indi.zproo.zrpc.common.bean.RpcRequest;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.SimpleChannelInboundHandler;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Map;

/**
 * 服务端处理器（用于处理RPC请求）
 * writing a netty server,
 * we should start with a handler implementation, which handles I/O events generated by Netty.
 * https://netty.io/wiki/user-guide-for-4.x.html#wiki-h2-4
 *
 * @author: 张健(千昭)
 * @create: 2018-06-07 14:36
 **/
public class RpcServerHandler extends SimpleChannelInboundHandler<RpcRequest> {

	private static final Logger logger = LoggerFactory.getLogger(RpcServerHandler.class);

	private final Map<String, Object> handlerMap;

	public RpcServerHandler(Map<String, Object> handlerMap) {
		this.handlerMap = handlerMap;
	}

	@Override
	protected void channelRead0(ChannelHandlerContext ctx, RpcRequest msg) throws Exception {
		// todo: 创建并初始化 RPC 响应对象

	}

	@Override
	public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {
		logger.error("server caught exception", cause);
		ctx.close();
	}
}
